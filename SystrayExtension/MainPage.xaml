<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SystrayExtension.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SystrayExtension"
    xmlns:xaml="using:Windows.UI.Xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        <!-- local resource dictionary that can cover style, layout and content localization -->
        <SolidColorBrush x:Key="StackPanelBorderBrushLocalDoc1" Color="Red"/>
        <ThemeResource x:Key="StackPanelBorderBrushSystemDoc1" ResourceKey="SystemControlBackgroundBaseMediumBrush"/>
    </Page.Resources>
    <Page.DataContext>
        <local:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <!--<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">-->
    <Grid Style="{StaticResource GridStyle1}">
        <!--<Grid.RowDefinitions><RowDefinition Height="*" /></Grid.RowDefinitions><Grid.ColumnDefinitions><ColumnDefinition Width="*" /></Grid.ColumnDefinitions>-->
        <!--<StackPanel Orientation="Vertical" Margin="10,0,0,20" BorderBrush="Red">-->
        <!--<StackPanel Orientation="Vertical" Margin="10,0,0,20" BorderBrush="{StaticResource StackPanelBorderBrushLocalDoc1}">-->
        <!--<StackPanel Orientation="Vertical" Margin="10,0,0,20" BorderBrush="{StaticResource StackPanelBorderBrushLocalApp1}">-->
        <!--<StackPanel Orientation="Vertical" Margin="10,0,0,20" BorderBrush="{ThemeResource StackPanelBorderBrushSystemDoc1}">-->
        <!--<StackPanel Orientation="Vertical" Margin="10,0,0,20" BorderBrush="{ThemeResource StackPanelBorderBrushSystemApp1}">-->
        <StackPanel Style="{StaticResource StackPanelStyle1}" Margin="10,2,0,18">
            <TextBlock FontWeight="Bold" Margin="10,20,0,20">A Few Windows Niceties Usage Info:</TextBlock>
            <TextBlock><Underline>Active Window Resizing Keyboard Shortcuts</Underline></TextBlock>
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="AltcText">1. Alt+C[enter] active window to 50-70% of screen width</TextBlock>
                <!--<TextBox x:Name="AltcWidth" Height="{x:Bind AltcText.Height - AltcText.Margin.Bottom}" Width="40" Text="{x:Bind ViewModel.AltcWidth}">
                    <TextBox.Margin><xaml:Thickness Bottom="{x:Bind AltcText.Margin.Bottom}"/></TextBox.Margin> // no good because Thickness is abstract/struct
                    <TextBox.Margin><xaml:FrameworkElement.Margin Bottom="{x:Bind AltcText.Margin.Bottom}"/></TextBox.Margin>
                </TextBox>-->
                <!--<TextBox x:Name="AltcWidth" local:Margin.Bottom="{x:Bind AltcText.Margin.Bottom}" Height="20" Width="40" Text="{x:Bind ViewModel.AltcWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>-->
                <TextBox x:Name="AltcWidth" Margin="10,-20,10,0" Padding="7,0,0,0" Height="20" Width="40" Text="{x:Bind ViewModel.AltcWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                <Slider x:Name="AltcWidthSlider" BorderBrush="Transparent" Margin="0,-15,0,0" Padding="0,-7,0,0" Height="20" Width="150" Minimum="50" Maximum="70" SmallChange="5" LargeChange="10" Value="{x:Bind ViewModel.AltcWidth, Mode=TwoWay}" />
            </StackPanel>
            <TextBlock>2. Alt+P[hone] center active window to 80% of screen height with 9:19 aspect ratio [ todo: make size slider configurable 60-90% ]</TextBlock>
            <TextBlock>3. Alt+T[ablet] center active window to 80% of screen height with 16:9 aspect ratio [ todo: make size slider configurable 60-90% ]</TextBlock>
            <StackPanel Orientation="Horizontal">
                <TextBlock>4. Alt+Arrow - position active window to left/right 3rd of screen using 30-50% for center 3rd</TextBlock>
                <TextBox x:Name="AltArrowWidth" Margin="10,-20,10,0" Padding="7,0,0,0" Height="20" Width="40" Text="{x:Bind ViewModel.AltArrowWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                <Slider x:Name="AltArrowWidthSlider" BorderBrush="Transparent" Margin="0,-15,0,0" Padding="0,-7,0,0" Height="20" Width="150" Minimum="30" Maximum="50" SmallChange="2" LargeChange="4" Value="{x:Bind ViewModel.AltArrowWidth, Mode=TwoWay}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock>5. Ctrl+Arrow - position active window to left/right 2/3rd and 3rd of screen using 60-80% for 2/3rd sizing</TextBlock>
                <TextBox x:Name="CtrlArrowWidth" Margin="10,-20,10,0" Padding="7,0,0,0" Height="20" Width="40" Text="{x:Bind ViewModel.CtrlArrowWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                <Slider x:Name="CtrlArrowWidthSlider" BorderBrush="Transparent" Margin="0,-15,0,0" Padding="0,-7,0,0" Height="20" Width="150" Minimum="60" Maximum="80" SmallChange="2" LargeChange="4" Value="{x:Bind ViewModel.CtrlArrowWidth, Mode=TwoWay}" />
            </StackPanel>
            <TextBlock>Shift modifier used on Alt+C knocks additional 1/3 off width, on Alt+P uses alternative 2:3 aspect ratio and on Alt+T knocks additional 1/3rd off height and uses alternative 3:2 aspect ratio.</TextBlock>
            <TextBlock><Underline>Other Keyboard Shortcuts</Underline></TextBlock>
            <TextBlock>1. Alt+A - shows this "A Few Windows Niceties" [afwn] application usage info dialog [ disabled given common use for accept ]</TextBlock>
            <TextBlock>2. Alt+B - swap mouse buttons for use when want to change hands to change up posture</TextBlock>
            <TextBlock>3. Alt+M - put active window into move mode vs more verbose out of box Alt+Space+M keyboard shortcut sequence</TextBlock>
            <TextBlock>4. Alt+X - toggle active window between maximize and normal state vs more verbose out of box Alt+Space+X/R shortcuts</TextBlock>
            <!--<TextBlock>4. Alt+X - exits this application including closing associated systray / notification area process</TextBlock>-->
            <TextBlock>5. Alt+Z - hibernate/sleep computer vs more verbose out of box Win+X,U,S keyboard shortcut sequence</TextBlock>
            <TextBlock>To enable win[dows] key on right side of keyboard in lieu of rarely used one, e.g. context menu key on microsoft keyboards and print 
                screen on lenovo x1 carbon/yoga devices, see <Hyperlink NavigateUri="https://github.com/randyrants/sharpkeys/releases">SharpKeys</Hyperlink> .
            </TextBlock>
            <!--<TextBlock>A reminder that there is a poorly advertised win[dows] + home keyboard shortcut that minimizes all other windows except the currently active one.
                This can be handy for use getting rid of all other windows after executing an Alt-C[enter] or Alt+P[hone] or Alt+T[ablet] active window positioning.
            </TextBlock>-->
            <StackPanel Orientation="Horizontal" Margin="10,0,20,20" HorizontalAlignment="Right">
                <TextBlock VerticalAlignment="Center">optional paypal donations <Hyperlink NavigateUri="https://www.paypal.me/ob1cot">here</Hyperlink></TextBlock>
                <Button Name="close" Click="close_Click" Margin="10, 0, 0, 20">Close</Button>
                <!--<Button Name="exit" Click="exit_Click" Margin="10, 0, 0, 20">Exit</Button>--> <!-- irrelevant as close/exit same thing in this case -->
            </StackPanel>
        </StackPanel>
    </Grid>
<!--</ScrollViewer>-->
</Page>
